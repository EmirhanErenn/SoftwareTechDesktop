<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        O5rXCkBmZgl02ffaehKYoj8OWkjL4FcAMgtLYLIFUEiDtEjTvFUAMitJYJ9rihKYLAEY/ApAZnUJXF0I
        5L/jn/yuWQD8efDCPgjE4FcAMjtIYELtg4Bsyz4GvwKQ2UICHWJTvtPo06oIoHHoNOqU0GW/6wx+BSCz
        1TyBdp1Dyz6DqwqgZe/lCtv6nF8BiIgCEBEFICIKQEQUgIgoABFRACKiAEREAYiIAhARBSAiCkBEFICI
        KAARUQAiogBEZLYWQOPGjUOvXr3C5ptvHg488MBw9NFHRw4//PCw//77h1133TVsvfXWYf311w9du+b/
        rblWrVqFRRddNGyxxRZh3333DUceeWQ45phjwhFHHBH22muvsMkmm4T+/fuHueeeO3f/Nm3ahPXWWy9s
        vPHGYaONNqoIaS2xxBJxP45Zyz7ZfZdaaqnQtGnTmAY/w5JLLtmgPFt44YXDhhtuGI+9wgorhGbNmtXb
        hmOsuOKKxfPj39VWWy20bNmybLrk47rrrlvxmrgPQ4YMifeiUaP6f0ikffv2YYMNNqg5LxdffPGq19u3
        b9+a8zhdK+dIHrA/18y113JObLPyyivn5uk888wTlllmmTBmzJhwyCGHxDJ21FFHhcMOOywcdNBBYc89
        9wzbbbddWGWVVUKTJk2K+3Xo0CHmG2mvscYaoUWLFrnXSRllG6CczPYC4AbtvPPO4fXXXw+///57KP38
        888/4d///nf4448/4vf77bdfvTSWW265cNNNN4XPPvssbvP333/XSeOvv/4Kv/32W/jggw/CJZdcEgtT
        aRoE8hdffBG3+/XXXyvy559/xnTY76yzzorHrLZPdt8rrrgiNG/ePBYgjsfv7r777tC2bdua8+2kk04q
        7nvhhRfmFtall146vP322/H82BbIo7XXXrtioH300UfFfEj7lfLDDz+EF198Md6P0sI8ePDg8O233xav
        uVwawL254IILql4vlUGteZzy+c4774xiZ/9u3bqFZ599NpajaufENo8++miYb7756uXN1VdfHb788st4
        3nllld9T/h588ME6ol199dXjfqT98ssvhwUXzP/Taccee2y8X2x3+eWX5wp2thIAteD7778fM5BA//jj
        j2MB/PTTT8NXX30VCxo3JX3IoNKb8vTTTxe/z8oiQWHI3jAKBkbOpkMtxLFq/Vx11VVxv/PPPz809HP9
        9ddH8VETfPfdd/F3BGZqVaRadK211oqtEqDGT99RMB966KG4H9dGjZPXqjrjjDOKx8zm4XXXXVe2BurX
        r1/4+uuviwX6p59+ivlSCsfl8+OPP4bNNtusThrLL798neOxbTn4XHTRRVXLCTVtQz/33XdfUardu3cP
        r7zySp1yUu6cKCuPP/54HQHQMuK+pQrlvffeC++8804sq59//nkU3s8//1y8pueffz60bt26uD/3krzk
        g5S7dOlSVuzpc+21187+AhgxYkSx5idTV1pppdCzZ89YI9OEo7bacsstw+677x4zh6ZRdn+aXRRUPk8+
        +WTYZZddwujRo8OoUaNit4F/t9122/j7N998M27H8YYPH15WAATlySefHPbZZ5/YnchCjXfAAQcUa9FV
        V101dlP4PbDN/fffX7yJFCS6Nel79qWJTYB27NixKC8KJF2ddD5cA+dDofnll19iMKfCQIsHOfJ59913
        Y9DmtWj4js/3338fTj/99FhQ+bAv511NAOTDbrvtFq+Vc07Q9aCGS59zzjmnngCoZflwTPIx3Yss22yz
        TZQX21crJ7QqUh4Cad52223Fe//SSy+FQw89tHiPuCfDhg2LLa0kAGreJKRTTjkljBw5MvecKC8017Pd
        RcoiLcQka7pdCyywQMwvugTU8Jtuumm8Ho5NV4DuQlYAyJLPW2+9FTp16pR7nccff/ycJQAyOpmRgonp
        KSwUMvqv9Ik6d+4cDVy6LzeX2qy0Zi03zvDwww8Xt6UAlBMAVh8wYEDMfPpxWWq5pnHjxhWPc+mll5bd
        jvQInvShecn583taGNnPE088Eeaff/64HxJJ3Ry6PqW1OeeNwNLnnnvuiYX1hhtuKP4udUMqCYACz9hE
        aT7QtOW46ZO6Q3kC+PDDD+O9JEiWXXbZInRPGtLlyYNAS/mADMqN75QKgAqAAKWPnT0nxFquaY4YaFny
        oZVK+WjIuWYFQP6OHTs2jk8xVpUlW3nMEQKgFrzjjjvqFHYMTa1HDUS/iaYWNQ4ZlG060b+j75w+N954
        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
        OP4fQMjsjpaC3hMAAAAASUVORK5CYII=
</value>
  </data>
</root>